/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export declare namespace ICopyrightNFT {
  export type CoverStruct = {
    id: PromiseOrValue<BigNumberish>;
    title: PromiseOrValue<string>;
    description: PromiseOrValue<string>;
    status: PromiseOrValue<string>;
    owner: PromiseOrValue<string>;
    timestamp: PromiseOrValue<BigNumberish>;
    nftAccount: PromiseOrValue<string>;
  };

  export type CoverStructOutput = [
    BigNumber,
    string,
    string,
    string,
    string,
    BigNumber,
    string
  ] & {
    id: BigNumber;
    title: string;
    description: string;
    status: string;
    owner: string;
    timestamp: BigNumber;
    nftAccount: string;
  };
}

export interface ICopyrightNFTInterface extends utils.Interface {
  functions: {
    "createCopyright(address,string,string,string)": FunctionFragment;
    "getAllCoypright()": FunctionFragment;
    "getAuthorCover(address)": FunctionFragment;
    "getCover(uint256)": FunctionFragment;
    "updateCover(uint256,string,string)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "createCopyright"
      | "createCopyright(address,string,string,string)"
      | "getAllCoypright"
      | "getAllCoypright()"
      | "getAuthorCover"
      | "getAuthorCover(address)"
      | "getCover"
      | "getCover(uint256)"
      | "updateCover"
      | "updateCover(uint256,string,string)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "createCopyright",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "createCopyright(address,string,string,string)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getAllCoypright",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAllCoypright()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAuthorCover",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuthorCover(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getCover",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getCover(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "updateCover",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "updateCover(uint256,string,string)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "createCopyright",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createCopyright(address,string,string,string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAllCoypright",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAllCoypright()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuthorCover",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuthorCover(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getCover", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getCover(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateCover",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateCover(uint256,string,string)",
    data: BytesLike
  ): Result;

  events: {
    "CoverCreation(string,string,address,string,uint256)": EventFragment;
    "CoverUpdate(uint256,string,string,string)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CoverCreation"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "CoverCreation(string,string,address,string,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CoverUpdate"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "CoverUpdate(uint256,string,string,string)"
  ): EventFragment;
}

export interface CoverCreationEventObject {
  title: string;
  description: string;
  owner: string;
  status: string;
  CoverId: BigNumber;
}
export type CoverCreationEvent = TypedEvent<
  [string, string, string, string, BigNumber],
  CoverCreationEventObject
>;

export type CoverCreationEventFilter = TypedEventFilter<CoverCreationEvent>;

export interface CoverUpdateEventObject {
  CoverId: BigNumber;
  title: string;
  description: string;
  status: string;
}
export type CoverUpdateEvent = TypedEvent<
  [BigNumber, string, string, string],
  CoverUpdateEventObject
>;

export type CoverUpdateEventFilter = TypedEventFilter<CoverUpdateEvent>;

export interface ICopyrightNFT extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ICopyrightNFTInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    createCopyright(
      to: PromiseOrValue<string>,
      title: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      status: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "createCopyright(address,string,string,string)"(
      to: PromiseOrValue<string>,
      title: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      status: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getAllCoypright(
      overrides?: CallOverrides
    ): Promise<[ICopyrightNFT.CoverStructOutput[]]>;

    "getAllCoypright()"(
      overrides?: CallOverrides
    ): Promise<[ICopyrightNFT.CoverStructOutput[]]>;

    getAuthorCover(
      _author: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[ICopyrightNFT.CoverStructOutput[]]>;

    "getAuthorCover(address)"(
      _author: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[ICopyrightNFT.CoverStructOutput[]]>;

    getCover(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[ICopyrightNFT.CoverStructOutput]>;

    "getCover(uint256)"(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[ICopyrightNFT.CoverStructOutput]>;

    updateCover(
      _id: PromiseOrValue<BigNumberish>,
      _title: PromiseOrValue<string>,
      _description: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "updateCover(uint256,string,string)"(
      _id: PromiseOrValue<BigNumberish>,
      _title: PromiseOrValue<string>,
      _description: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  createCopyright(
    to: PromiseOrValue<string>,
    title: PromiseOrValue<string>,
    description: PromiseOrValue<string>,
    status: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "createCopyright(address,string,string,string)"(
    to: PromiseOrValue<string>,
    title: PromiseOrValue<string>,
    description: PromiseOrValue<string>,
    status: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getAllCoypright(
    overrides?: CallOverrides
  ): Promise<ICopyrightNFT.CoverStructOutput[]>;

  "getAllCoypright()"(
    overrides?: CallOverrides
  ): Promise<ICopyrightNFT.CoverStructOutput[]>;

  getAuthorCover(
    _author: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<ICopyrightNFT.CoverStructOutput[]>;

  "getAuthorCover(address)"(
    _author: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<ICopyrightNFT.CoverStructOutput[]>;

  getCover(
    _id: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<ICopyrightNFT.CoverStructOutput>;

  "getCover(uint256)"(
    _id: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<ICopyrightNFT.CoverStructOutput>;

  updateCover(
    _id: PromiseOrValue<BigNumberish>,
    _title: PromiseOrValue<string>,
    _description: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "updateCover(uint256,string,string)"(
    _id: PromiseOrValue<BigNumberish>,
    _title: PromiseOrValue<string>,
    _description: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    createCopyright(
      to: PromiseOrValue<string>,
      title: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      status: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    "createCopyright(address,string,string,string)"(
      to: PromiseOrValue<string>,
      title: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      status: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    getAllCoypright(
      overrides?: CallOverrides
    ): Promise<ICopyrightNFT.CoverStructOutput[]>;

    "getAllCoypright()"(
      overrides?: CallOverrides
    ): Promise<ICopyrightNFT.CoverStructOutput[]>;

    getAuthorCover(
      _author: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<ICopyrightNFT.CoverStructOutput[]>;

    "getAuthorCover(address)"(
      _author: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<ICopyrightNFT.CoverStructOutput[]>;

    getCover(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<ICopyrightNFT.CoverStructOutput>;

    "getCover(uint256)"(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<ICopyrightNFT.CoverStructOutput>;

    updateCover(
      _id: PromiseOrValue<BigNumberish>,
      _title: PromiseOrValue<string>,
      _description: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "updateCover(uint256,string,string)"(
      _id: PromiseOrValue<BigNumberish>,
      _title: PromiseOrValue<string>,
      _description: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {
    "CoverCreation(string,string,address,string,uint256)"(
      title?: null,
      description?: null,
      owner?: null,
      status?: null,
      CoverId?: PromiseOrValue<BigNumberish> | null
    ): CoverCreationEventFilter;
    CoverCreation(
      title?: null,
      description?: null,
      owner?: null,
      status?: null,
      CoverId?: PromiseOrValue<BigNumberish> | null
    ): CoverCreationEventFilter;

    "CoverUpdate(uint256,string,string,string)"(
      CoverId?: PromiseOrValue<BigNumberish> | null,
      title?: null,
      description?: null,
      status?: null
    ): CoverUpdateEventFilter;
    CoverUpdate(
      CoverId?: PromiseOrValue<BigNumberish> | null,
      title?: null,
      description?: null,
      status?: null
    ): CoverUpdateEventFilter;
  };

  estimateGas: {
    createCopyright(
      to: PromiseOrValue<string>,
      title: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      status: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "createCopyright(address,string,string,string)"(
      to: PromiseOrValue<string>,
      title: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      status: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getAllCoypright(overrides?: CallOverrides): Promise<BigNumber>;

    "getAllCoypright()"(overrides?: CallOverrides): Promise<BigNumber>;

    getAuthorCover(
      _author: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuthorCover(address)"(
      _author: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCover(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCover(uint256)"(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    updateCover(
      _id: PromiseOrValue<BigNumberish>,
      _title: PromiseOrValue<string>,
      _description: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "updateCover(uint256,string,string)"(
      _id: PromiseOrValue<BigNumberish>,
      _title: PromiseOrValue<string>,
      _description: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    createCopyright(
      to: PromiseOrValue<string>,
      title: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      status: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "createCopyright(address,string,string,string)"(
      to: PromiseOrValue<string>,
      title: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      status: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getAllCoypright(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getAllCoypright()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAuthorCover(
      _author: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAuthorCover(address)"(
      _author: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCover(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCover(uint256)"(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    updateCover(
      _id: PromiseOrValue<BigNumberish>,
      _title: PromiseOrValue<string>,
      _description: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "updateCover(uint256,string,string)"(
      _id: PromiseOrValue<BigNumberish>,
      _title: PromiseOrValue<string>,
      _description: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
