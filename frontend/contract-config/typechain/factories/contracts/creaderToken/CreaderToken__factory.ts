/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CreaderToken,
  CreaderTokenInterface,
} from "../../../contracts/creaderToken/CreaderToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106b83803806106b883398101604081905261002f91610124565b600061003b848261021b565b506001610048838261021b565b50600281905533600090815260036020526040902055506102da9050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261008d57600080fd5b81516001600160401b03808211156100a7576100a7610066565b604051601f8301601f19908116603f011681019082821181831017156100cf576100cf610066565b81604052838152602092508660208588010111156100ec57600080fd5b600091505b8382101561010e57858201830151818301840152908201906100f1565b6000602085830101528094505050505092915050565b60008060006060848603121561013957600080fd5b83516001600160401b038082111561015057600080fd5b61015c8783880161007c565b9450602086015191508082111561017257600080fd5b5061017f8682870161007c565b925050604084015190509250925092565b600181811c908216806101a457607f821691505b6020821081036101c457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610216576000816000526020600020601f850160051c810160208610156101f35750805b601f850160051c820191505b81811015610212578281556001016101ff565b5050505b505050565b81516001600160401b0381111561023457610234610066565b610248816102428454610190565b846101ca565b602080601f83116001811461027d57600084156102655750858301515b600019600386901b1c1916600185901b178555610212565b600085815260208120601f198616915b828110156102ac5788860151825594840194600190910190840161028d565b50858210156102ca5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6103cf806102e96000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806306fdde031461005c57806318160ddd1461007a57806370a082311461009157806395d89b41146100b1578063a9059cbb146100b9575b600080fd5b6100646100dc565b604051610071919061026c565b60405180910390f35b61008360025481565b604051908152602001610071565b61008361009f3660046102d7565b60036020526000908152604090205481565b61006461016a565b6100cc6100c73660046102f9565b610177565b6040519015158152602001610071565b600080546100e990610323565b80601f016020809104026020016040519081016040528092919081815260200182805461011590610323565b80156101625780601f1061013757610100808354040283529160200191610162565b820191906000526020600020905b81548152906001019060200180831161014557829003601f168201915b505050505081565b600180546100e990610323565b336000908152600360205260408120548211156101d15760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640160405180910390fd5b33600090815260036020526040812080548492906101f0908490610373565b90915550506001600160a01b0383166000908152600360205260408120805484929061021d908490610386565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35060015b92915050565b60006020808352835180602085015260005b8181101561029a5785810183015185820160400152820161027e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146102d257600080fd5b919050565b6000602082840312156102e957600080fd5b6102f2826102bb565b9392505050565b6000806040838503121561030c57600080fd5b610315836102bb565b946020939093013593505050565b600181811c9082168061033757607f821691505b60208210810361035757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102665761026661035d565b808201808211156102665761026661035d56fea26469706673582212209cea82d0a7171e1051d85fdba2b7ffe286c538820a7389c98ede8b6489652dc064736f6c63430008170033";

type CreaderTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CreaderTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CreaderToken__factory extends ContractFactory {
  constructor(...args: CreaderTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _totalSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CreaderToken> {
    return super.deploy(
      _name,
      _symbol,
      _totalSupply,
      overrides || {}
    ) as Promise<CreaderToken>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _totalSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _totalSupply,
      overrides || {}
    );
  }
  override attach(address: string): CreaderToken {
    return super.attach(address) as CreaderToken;
  }
  override connect(signer: Signer): CreaderToken__factory {
    return super.connect(signer) as CreaderToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CreaderTokenInterface {
    return new utils.Interface(_abi) as CreaderTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CreaderToken {
    return new Contract(address, _abi, signerOrProvider) as CreaderToken;
  }
}
