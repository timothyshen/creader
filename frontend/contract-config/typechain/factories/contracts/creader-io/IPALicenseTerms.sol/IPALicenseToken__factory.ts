/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  IPALicenseToken,
  IPALicenseTokenInterface,
} from "../../../../contracts/creader-io/IPALicenseTerms.sol/IPALicenseToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ipAssetRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "licensingModule",
        type: "address",
      },
      {
        internalType: "address",
        name: "pilTemplate",
        type: "address",
      },
      {
        internalType: "address",
        name: "accessController",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ACCESS_CONTROLLER",
    outputs: [
      {
        internalType: "contract AccessController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BODHI",
    outputs: [
      {
        internalType: "contract IBodhi",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "IP_ASSET_REGISTRY",
    outputs: [
      {
        internalType: "contract IPAssetRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LICENSING_MODULE",
    outputs: [
      {
        internalType: "contract LicensingModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PIL_TEMPLATE",
    outputs: [
      {
        internalType: "contract PILicenseTemplate",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SNFT",
    outputs: [
      {
        internalType: "contract SimpleNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ipId",
        type: "address",
      },
    ],
    name: "mintLicenseTokenCopyright",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "remixTypes",
    outputs: [
      {
        internalType: "enum IPALicenseToken.RemixType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61014060405234801561001157600080fd5b50604051610b53380380610b538339818101604052810190610033919061016f565b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff1681525050505050506101d6565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061013c82610111565b9050919050565b61014c81610131565b811461015757600080fd5b50565b60008151905061016981610143565b92915050565b600080600080608085870312156101895761018861010c565b5b60006101978782880161015a565b94505060206101a88782880161015a565b93505060406101b98782880161015a565b92505060606101ca8782880161015a565b91505092959194509250565b60805160a05160c05160e05161010051610120516109126102416000396000610286015260006102330152600081816101c701526102ac0152600081816101a301526103bd01526000818161020f015281816102ea0152610380015260006101eb01526109126000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636680e4bd1161005b5780636680e4bd14610105578063975d81dc14610123578063f54288cd14610153578063ff3573591461017157610088565b806312c4ce881461008d5780631b8b1073146100ab57806341c782c5146100c957806365165aa5146100e7575b600080fd5b6100956101a1565b6040516100a291906104b5565b60405180910390f35b6100b36101c5565b6040516100c091906104f1565b60405180910390f35b6100d16101e9565b6040516100de919061052d565b60405180910390f35b6100ef61020d565b6040516100fc9190610569565b60405180910390f35b61010d610231565b60405161011a91906105a5565b60405180910390f35b61013d60048036038101906101389190610639565b610255565b60405161014a91906106f0565b60405180910390f35b61015b610284565b604051610168919061072c565b60405180910390f35b61018b60048036038101906101869190610747565b6102a8565b6040516101989190610783565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637bac65fd83307f00000000000000000000000000000000000000000000000000000000000000007f2a4130c0c411fc8e66ac8da6291522731989c6cd1fee49bf12e0a2bd2d22b91660016040518663ffffffff1660e01b815260040161034c959493929190610821565b600060405180830381600087803b15801561036657600080fd5b505af115801561037a573d6000803e3d6000fd5b505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632a4130c0837f000000000000000000000000000000000000000000000000000000000000000060016040518463ffffffff1660e01b81526004016103fc939291906108a5565b600060405180830381600087803b15801561041657600080fd5b505af115801561042a573d6000803e3d6000fd5b50505050819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061047b61047661047184610436565b610456565b610436565b9050919050565b600061048d82610460565b9050919050565b600061049f82610482565b9050919050565b6104af81610494565b82525050565b60006020820190506104ca60008301846104a6565b92915050565b60006104db82610482565b9050919050565b6104eb816104d0565b82525050565b600060208201905061050660008301846104e2565b92915050565b600061051782610482565b9050919050565b6105278161050c565b82525050565b6000602082019050610542600083018461051e565b92915050565b600061055382610482565b9050919050565b61056381610548565b82525050565b600060208201905061057e600083018461055a565b92915050565b600061058f82610482565b9050919050565b61059f81610584565b82525050565b60006020820190506105ba6000830184610596565b92915050565b600080fd5b60006105d082610436565b9050919050565b6105e0816105c5565b81146105eb57600080fd5b50565b6000813590506105fd816105d7565b92915050565b6000819050919050565b61061681610603565b811461062157600080fd5b50565b6000813590506106338161060d565b92915050565b600080604083850312156106505761064f6105c0565b5b600061065e858286016105ee565b925050602061066f85828601610624565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106106b9576106b8610679565b5b50565b60008190506106ca826106a8565b919050565b60006106da826106bc565b9050919050565b6106ea816106cf565b82525050565b600060208201905061070560008301846106e1565b92915050565b600061071682610482565b9050919050565b6107268161070b565b82525050565b6000602082019050610741600083018461071d565b92915050565b60006020828403121561075d5761075c6105c0565b5b600061076b848285016105ee565b91505092915050565b61077d816105c5565b82525050565b60006020820190506107986000830184610774565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6107d38161079e565b82525050565b6000819050919050565b600060ff82169050919050565b600061080b610806610801846107d9565b610456565b6107e3565b9050919050565b61081b816107f0565b82525050565b600060a0820190506108366000830188610774565b6108436020830187610774565b6108506040830186610774565b61085d60608301856107ca565b61086a6080830184610812565b9695505050505050565b600061088f61088a610885846107d9565b610456565b610603565b9050919050565b61089f81610874565b82525050565b60006060820190506108ba6000830186610774565b6108c76020830185610774565b6108d46040830184610896565b94935050505056fea26469706673582212204cf54c46a4ff6bcc504a81220147576526a1a5c8cb47bbf8c05dd3343bc3123364736f6c63430008170033";

type IPALicenseTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IPALicenseTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IPALicenseToken__factory extends ContractFactory {
  constructor(...args: IPALicenseTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    ipAssetRegistry: PromiseOrValue<string>,
    licensingModule: PromiseOrValue<string>,
    pilTemplate: PromiseOrValue<string>,
    accessController: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IPALicenseToken> {
    return super.deploy(
      ipAssetRegistry,
      licensingModule,
      pilTemplate,
      accessController,
      overrides || {}
    ) as Promise<IPALicenseToken>;
  }
  override getDeployTransaction(
    ipAssetRegistry: PromiseOrValue<string>,
    licensingModule: PromiseOrValue<string>,
    pilTemplate: PromiseOrValue<string>,
    accessController: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      ipAssetRegistry,
      licensingModule,
      pilTemplate,
      accessController,
      overrides || {}
    );
  }
  override attach(address: string): IPALicenseToken {
    return super.attach(address) as IPALicenseToken;
  }
  override connect(signer: Signer): IPALicenseToken__factory {
    return super.connect(signer) as IPALicenseToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IPALicenseTokenInterface {
    return new utils.Interface(_abi) as IPALicenseTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPALicenseToken {
    return new Contract(address, _abi, signerOrProvider) as IPALicenseToken;
  }
}
