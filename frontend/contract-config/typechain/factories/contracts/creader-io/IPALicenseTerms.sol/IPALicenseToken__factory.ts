/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  IPALicenseToken,
  IPALicenseTokenInterface,
} from "../../../../contracts/creader-io/IPALicenseTerms.sol/IPALicenseToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ipAssetRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "licensingModule",
        type: "address",
      },
      {
        internalType: "address",
        name: "pilTemplate",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BODHI",
    outputs: [
      {
        internalType: "contract IBodhi",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "IP_ASSET_REGISTRY",
    outputs: [
      {
        internalType: "contract IPAssetRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LICENSING_MODULE",
    outputs: [
      {
        internalType: "contract LicensingModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PIL_TEMPLATE",
    outputs: [
      {
        internalType: "contract PILicenseTemplate",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SNFT",
    outputs: [
      {
        internalType: "contract SimpleNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ipId",
        type: "address",
      },
    ],
    name: "mintLicenseTokenCopyright",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "remixTypes",
    outputs: [
      {
        internalType: "enum IPALicenseToken.RemixType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61012060405234801561001157600080fd5b506040516108c83803806108c88339818101604052810190610033919061013a565b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff168152505050505061018d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610107826100dc565b9050919050565b610117816100fc565b811461012257600080fd5b50565b6000815190506101348161010e565b92915050565b600080600060608486031215610153576101526100d7565b5b600061016186828701610125565b935050602061017286828701610125565b925050604061018386828701610125565b9150509250925092565b60805160a05160c05160e051610100516106e96101df6000396000610239015260006101e601526000818161017a015261029c0152600081816101c2015261025f0152600061019e01526106e96000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636680e4bd1161005b5780636680e4bd146100dc578063975d81dc146100fa578063f54288cd1461012a578063ff357359146101485761007d565b806312c4ce881461008257806341c782c5146100a057806365165aa5146100be575b600080fd5b61008a610178565b6040516100979190610394565b60405180910390f35b6100a861019c565b6040516100b591906103d0565b60405180910390f35b6100c66101c0565b6040516100d3919061040c565b60405180910390f35b6100e46101e4565b6040516100f19190610448565b60405180910390f35b610114600480360381019061010f91906104dc565b610208565b6040516101219190610593565b60405180910390f35b610132610237565b60405161013f91906105cf565b60405180910390f35b610162600480360381019061015d91906105ea565b61025b565b60405161016f9190610626565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632a4130c0837f000000000000000000000000000000000000000000000000000000000000000060026040518463ffffffff1660e01b81526004016102db9392919061067c565b600060405180830381600087803b1580156102f557600080fd5b505af1158015610309573d6000803e3d6000fd5b50505050819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061035a61035561035084610315565b610335565b610315565b9050919050565b600061036c8261033f565b9050919050565b600061037e82610361565b9050919050565b61038e81610373565b82525050565b60006020820190506103a96000830184610385565b92915050565b60006103ba82610361565b9050919050565b6103ca816103af565b82525050565b60006020820190506103e560008301846103c1565b92915050565b60006103f682610361565b9050919050565b610406816103eb565b82525050565b600060208201905061042160008301846103fd565b92915050565b600061043282610361565b9050919050565b61044281610427565b82525050565b600060208201905061045d6000830184610439565b92915050565b600080fd5b600061047382610315565b9050919050565b61048381610468565b811461048e57600080fd5b50565b6000813590506104a08161047a565b92915050565b6000819050919050565b6104b9816104a6565b81146104c457600080fd5b50565b6000813590506104d6816104b0565b92915050565b600080604083850312156104f3576104f2610463565b5b600061050185828601610491565b9250506020610512858286016104c7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061055c5761055b61051c565b5b50565b600081905061056d8261054b565b919050565b600061057d8261055f565b9050919050565b61058d81610572565b82525050565b60006020820190506105a86000830184610584565b92915050565b60006105b982610361565b9050919050565b6105c9816105ae565b82525050565b60006020820190506105e460008301846105c0565b92915050565b600060208284031215610600576105ff610463565b5b600061060e84828501610491565b91505092915050565b61062081610468565b82525050565b600060208201905061063b6000830184610617565b92915050565b6000819050919050565b600061066661066161065c84610641565b610335565b6104a6565b9050919050565b6106768161064b565b82525050565b60006060820190506106916000830186610617565b61069e6020830185610617565b6106ab604083018461066d565b94935050505056fea2646970667358221220c469ec7a12f4f22765813eea9877d367b797dfbc65db9afd5bbf12183f123b8164736f6c63430008170033";

type IPALicenseTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IPALicenseTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IPALicenseToken__factory extends ContractFactory {
  constructor(...args: IPALicenseTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    ipAssetRegistry: PromiseOrValue<string>,
    licensingModule: PromiseOrValue<string>,
    pilTemplate: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IPALicenseToken> {
    return super.deploy(
      ipAssetRegistry,
      licensingModule,
      pilTemplate,
      overrides || {}
    ) as Promise<IPALicenseToken>;
  }
  override getDeployTransaction(
    ipAssetRegistry: PromiseOrValue<string>,
    licensingModule: PromiseOrValue<string>,
    pilTemplate: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      ipAssetRegistry,
      licensingModule,
      pilTemplate,
      overrides || {}
    );
  }
  override attach(address: string): IPALicenseToken {
    return super.attach(address) as IPALicenseToken;
  }
  override connect(signer: Signer): IPALicenseToken__factory {
    return super.connect(signer) as IPALicenseToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IPALicenseTokenInterface {
    return new utils.Interface(_abi) as IPALicenseTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPALicenseToken {
    return new Contract(address, _abi, signerOrProvider) as IPALicenseToken;
  }
}
