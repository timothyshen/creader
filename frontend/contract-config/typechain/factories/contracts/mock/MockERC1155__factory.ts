/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockERC1155,
  MockERC1155Interface,
} from "../../../contracts/mock/MockERC1155";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC1155InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idsLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "valuesLength",
        type: "uint256",
      },
    ],
    name: "ERC1155InvalidArrayLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC1155InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC1155InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC1155MissingApprovalForAll",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601681526020017f687474703a2f2f4d6f636b455243313135352e636f6d0000000000000000000081525062000059816200006060201b60201c565b50620003d6565b8060029081620000719190620002ef565b5050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620000f757607f821691505b6020821081036200010d576200010c620000af565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001777fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000138565b62000183868362000138565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620001d0620001ca620001c4846200019b565b620001a5565b6200019b565b9050919050565b6000819050919050565b620001ec83620001af565b62000204620001fb82620001d7565b84845462000145565b825550505050565b600090565b6200021b6200020c565b62000228818484620001e1565b505050565b5b8181101562000250576200024460008262000211565b6001810190506200022e565b5050565b601f8211156200029f57620002698162000113565b620002748462000128565b8101602085101562000284578190505b6200029c620002938562000128565b8301826200022d565b50505b505050565b600082821c905092915050565b6000620002c460001984600802620002a4565b1980831691505092915050565b6000620002df8383620002b1565b9150826002028217905092915050565b620002fa8262000075565b67ffffffffffffffff81111562000316576200031562000080565b5b620003228254620000de565b6200032f82828562000254565b600060209050601f83116001811462000367576000841562000352578287015190505b6200035e8582620002d1565b865550620003ce565b601f198416620003778662000113565b60005b82811015620003a1578489015182556001820191506020850194506020810190506200037a565b86831015620003c15784890151620003bd601f891682620002b1565b8355505b6001600288020188555050505b505050505050565b61202480620003e66000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80632eb2c2d6116100665780632eb2c2d6146101435780634e1273f41461015f578063a22cb4651461018f578063e985e9c5146101ab578063f242432a146101db57610092565b8062fdd58e1461009757806301ffc9a7146100c75780630e89341c146100f7578063156e29f614610127575b600080fd5b6100b160048036038101906100ac919061142a565b6101f7565b6040516100be9190611479565b60405180910390f35b6100e160048036038101906100dc91906114ec565b610251565b6040516100ee9190611534565b60405180910390f35b610111600480360381019061010c919061154f565b610333565b60405161011e919061160c565b60405180910390f35b610141600480360381019061013c919061162e565b6103c7565b005b61015d6004803603810190610158919061187e565b6103e7565b005b61017960048036038101906101749190611a10565b61048f565b6040516101869190611b46565b60405180910390f35b6101a960048036038101906101a49190611b94565b610598565b005b6101c560048036038101906101c09190611bd4565b6105ae565b6040516101d29190611534565b60405180910390f35b6101f560048036038101906101f09190611c14565b610642565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061031c57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061032c575061032b826106ea565b5b9050919050565b60606002805461034290611cda565b80601f016020809104026020016040519081016040528092919081815260200182805461036e90611cda565b80156103bb5780601f10610390576101008083540402835291602001916103bb565b820191906000526020600020905b81548152906001019060200180831161039e57829003601f168201915b50505050509050919050565b6103e283838360405180602001604052806000815250610754565b505050565b60006103f16107ed565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610436575061043486826105ae565b155b1561047a5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610471929190611d1a565b60405180910390fd5b61048786868686866107f5565b505050505050565b606081518351146104db57815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016104d2929190611d43565b60405180910390fd5b6000835167ffffffffffffffff8111156104f8576104f7611686565b5b6040519080825280602002602001820160405280156105265781602001602082028036833780820191505090505b50905060005b845181101561058d5761056361054b82876108ed90919063ffffffff16565b61055e838761090190919063ffffffff16565b6101f7565b82828151811061057657610575611d6c565b5b60200260200101818152505080600101905061052c565b508091505092915050565b6105aa6105a36107ed565b8383610915565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600061064c6107ed565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610691575061068f86826105ae565b155b156106d55780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016106cc929190611d1a565b60405180910390fd5b6106e28686868686610a85565b505050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107c65760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016107bd9190611d9b565b60405180910390fd5b6000806107d38585610b90565b915091506107e5600087848487610bc0565b505050505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036108675760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161085e9190611d9b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036108d95760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016108d09190611d9b565b60405180910390fd5b6108e68585858585610bc0565b5050505050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109875760006040517fced3e10000000000000000000000000000000000000000000000000000000000815260040161097e9190611d9b565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a789190611534565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610af75760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610aee9190611d9b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610b695760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610b609190611d9b565b60405180910390fd5b600080610b768585610b90565b91509150610b878787848487610bc0565b50505050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b610bcc85858585610c72565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610c6b576000610c0a6107ed565b90506001845103610c5a576000610c2b60008661090190919063ffffffff16565b90506000610c4360008661090190919063ffffffff16565b9050610c5383898985858961101a565b5050610c69565b610c688187878787876111ce565b5b505b5050505050565b8051825114610cbc57815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610cb3929190611d43565b60405180910390fd5b6000610cc66107ed565b905060005b8351811015610ed5576000610ce9828661090190919063ffffffff16565b90506000610d00838661090190919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610e2d57600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610dd557888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610dcc9493929190611db6565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610ec8578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ec09190611e2a565b925050819055505b5050806001019050610ccb565b506001835103610f94576000610ef560008561090190919063ffffffff16565b90506000610f0d60008561090190919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610f85929190611d43565b60405180910390a45050611013565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161100a929190611e5e565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b11156111c6578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161107b959493929190611eea565b6020604051808303816000875af19250505080156110b757506040513d601f19601f820116820180604052508101906110b49190611f59565b60015b61113b573d80600081146110e7576040519150601f19603f3d011682016040523d82523d6000602084013e6110ec565b606091505b50600081510361113357846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161112a9190611d9b565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146111c457846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111bb9190611d9b565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111561137a578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161122f959493929190611f86565b6020604051808303816000875af192505050801561126b57506040513d601f19601f820116820180604052508101906112689190611f59565b60015b6112ef573d806000811461129b576040519150601f19603f3d011682016040523d82523d6000602084013e6112a0565b606091505b5060008151036112e757846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016112de9190611d9b565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461137857846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161136f9190611d9b565b60405180910390fd5b505b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113c182611396565b9050919050565b6113d1816113b6565b81146113dc57600080fd5b50565b6000813590506113ee816113c8565b92915050565b6000819050919050565b611407816113f4565b811461141257600080fd5b50565b600081359050611424816113fe565b92915050565b600080604083850312156114415761144061138c565b5b600061144f858286016113df565b925050602061146085828601611415565b9150509250929050565b611473816113f4565b82525050565b600060208201905061148e600083018461146a565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114c981611494565b81146114d457600080fd5b50565b6000813590506114e6816114c0565b92915050565b6000602082840312156115025761150161138c565b5b6000611510848285016114d7565b91505092915050565b60008115159050919050565b61152e81611519565b82525050565b60006020820190506115496000830184611525565b92915050565b6000602082840312156115655761156461138c565b5b600061157384828501611415565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115b657808201518184015260208101905061159b565b60008484015250505050565b6000601f19601f8301169050919050565b60006115de8261157c565b6115e88185611587565b93506115f8818560208601611598565b611601816115c2565b840191505092915050565b6000602082019050818103600083015261162681846115d3565b905092915050565b6000806000606084860312156116475761164661138c565b5b6000611655868287016113df565b935050602061166686828701611415565b925050604061167786828701611415565b9150509250925092565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116be826115c2565b810181811067ffffffffffffffff821117156116dd576116dc611686565b5b80604052505050565b60006116f0611382565b90506116fc82826116b5565b919050565b600067ffffffffffffffff82111561171c5761171b611686565b5b602082029050602081019050919050565b600080fd5b600061174561174084611701565b6116e6565b905080838252602082019050602084028301858111156117685761176761172d565b5b835b81811015611791578061177d8882611415565b84526020840193505060208101905061176a565b5050509392505050565b600082601f8301126117b0576117af611681565b5b81356117c0848260208601611732565b91505092915050565b600080fd5b600067ffffffffffffffff8211156117e9576117e8611686565b5b6117f2826115c2565b9050602081019050919050565b82818337600083830152505050565b600061182161181c846117ce565b6116e6565b90508281526020810184848401111561183d5761183c6117c9565b5b6118488482856117ff565b509392505050565b600082601f83011261186557611864611681565b5b813561187584826020860161180e565b91505092915050565b600080600080600060a0868803121561189a5761189961138c565b5b60006118a8888289016113df565b95505060206118b9888289016113df565b945050604086013567ffffffffffffffff8111156118da576118d9611391565b5b6118e68882890161179b565b935050606086013567ffffffffffffffff81111561190757611906611391565b5b6119138882890161179b565b925050608086013567ffffffffffffffff81111561193457611933611391565b5b61194088828901611850565b9150509295509295909350565b600067ffffffffffffffff82111561196857611967611686565b5b602082029050602081019050919050565b600061198c6119878461194d565b6116e6565b905080838252602082019050602084028301858111156119af576119ae61172d565b5b835b818110156119d857806119c488826113df565b8452602084019350506020810190506119b1565b5050509392505050565b600082601f8301126119f7576119f6611681565b5b8135611a07848260208601611979565b91505092915050565b60008060408385031215611a2757611a2661138c565b5b600083013567ffffffffffffffff811115611a4557611a44611391565b5b611a51858286016119e2565b925050602083013567ffffffffffffffff811115611a7257611a71611391565b5b611a7e8582860161179b565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611abd816113f4565b82525050565b6000611acf8383611ab4565b60208301905092915050565b6000602082019050919050565b6000611af382611a88565b611afd8185611a93565b9350611b0883611aa4565b8060005b83811015611b39578151611b208882611ac3565b9750611b2b83611adb565b925050600181019050611b0c565b5085935050505092915050565b60006020820190508181036000830152611b608184611ae8565b905092915050565b611b7181611519565b8114611b7c57600080fd5b50565b600081359050611b8e81611b68565b92915050565b60008060408385031215611bab57611baa61138c565b5b6000611bb9858286016113df565b9250506020611bca85828601611b7f565b9150509250929050565b60008060408385031215611beb57611bea61138c565b5b6000611bf9858286016113df565b9250506020611c0a858286016113df565b9150509250929050565b600080600080600060a08688031215611c3057611c2f61138c565b5b6000611c3e888289016113df565b9550506020611c4f888289016113df565b9450506040611c6088828901611415565b9350506060611c7188828901611415565b925050608086013567ffffffffffffffff811115611c9257611c91611391565b5b611c9e88828901611850565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cf257607f821691505b602082108103611d0557611d04611cab565b5b50919050565b611d14816113b6565b82525050565b6000604082019050611d2f6000830185611d0b565b611d3c6020830184611d0b565b9392505050565b6000604082019050611d58600083018561146a565b611d65602083018461146a565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082019050611db06000830184611d0b565b92915050565b6000608082019050611dcb6000830187611d0b565b611dd8602083018661146a565b611de5604083018561146a565b611df2606083018461146a565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e35826113f4565b9150611e40836113f4565b9250828201905080821115611e5857611e57611dfb565b5b92915050565b60006040820190508181036000830152611e788185611ae8565b90508181036020830152611e8c8184611ae8565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000611ebc82611e95565b611ec68185611ea0565b9350611ed6818560208601611598565b611edf816115c2565b840191505092915050565b600060a082019050611eff6000830188611d0b565b611f0c6020830187611d0b565b611f19604083018661146a565b611f26606083018561146a565b8181036080830152611f388184611eb1565b90509695505050505050565b600081519050611f53816114c0565b92915050565b600060208284031215611f6f57611f6e61138c565b5b6000611f7d84828501611f44565b91505092915050565b600060a082019050611f9b6000830188611d0b565b611fa86020830187611d0b565b8181036040830152611fba8186611ae8565b90508181036060830152611fce8185611ae8565b90508181036080830152611fe28184611eb1565b9050969550505050505056fea2646970667358221220a87adf4079ee024b80eb169eead758674e417c489901f524847ec7a07b6dd9ec64736f6c63430008170033";

type MockERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC1155__factory extends ContractFactory {
  constructor(...args: MockERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockERC1155> {
    return super.deploy(overrides || {}) as Promise<MockERC1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockERC1155 {
    return super.attach(address) as MockERC1155;
  }
  override connect(signer: Signer): MockERC1155__factory {
    return super.connect(signer) as MockERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC1155Interface {
    return new utils.Interface(_abi) as MockERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC1155 {
    return new Contract(address, _abi, signerOrProvider) as MockERC1155;
  }
}
