/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockERC721Second,
  MockERC721SecondInterface,
} from "../../../contracts/mock/MockERC721Second";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601081526020017f4d6f636b4552433732315365636f6e64000000000000000000000000000000008152506040518060400160405280600581526020017f4d3732315300000000000000000000000000000000000000000000000000000081525081600090816200008f919062000324565b508060019081620000a1919062000324565b5050506200040b565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200012c57607f821691505b602082108103620001425762000141620000e4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001ac7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200016d565b620001b886836200016d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000205620001ff620001f984620001d0565b620001da565b620001d0565b9050919050565b6000819050919050565b6200022183620001e4565b6200023962000230826200020c565b8484546200017a565b825550505050565b600090565b6200025062000241565b6200025d81848462000216565b505050565b5b8181101562000285576200027960008262000246565b60018101905062000263565b5050565b601f821115620002d4576200029e8162000148565b620002a9846200015d565b81016020851015620002b9578190505b620002d1620002c8856200015d565b83018262000262565b50505b505050565b600082821c905092915050565b6000620002f960001984600802620002d9565b1980831691505092915050565b6000620003148383620002e6565b9150826002028217905092915050565b6200032f82620000aa565b67ffffffffffffffff8111156200034b576200034a620000b5565b5b62000357825462000113565b6200036482828562000289565b600060209050601f8311600181146200039c576000841562000387578287015190505b62000393858262000306565b86555062000403565b601f198416620003ac8662000148565b60005b82811015620003d657848901518255600182019150602085019450602081019050620003af565b86831015620003f65784890151620003f2601f891682620002e6565b8355505b6001600288020188555050505b505050505050565b611df4806200041b6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025b578063b88d4fde14610277578063c87b56dd14610293578063e985e9c5146102c3576100ea565b80636352211e146101dd57806370a082311461020d57806395d89b411461023d576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806323b872dd1461018957806340c10f19146101a557806342842e0e146101c1576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b6101096004803603810190610104919061163e565b6102f3565b6040516101169190611686565b60405180910390f35b6101276103d5565b6040516101349190611731565b60405180910390f35b61015760048036038101906101529190611789565b610467565b60405161016491906117f7565b60405180910390f35b6101876004803603810190610182919061183e565b610483565b005b6101a3600480360381019061019e919061187e565b610499565b005b6101bf60048036038101906101ba919061183e565b61059b565b005b6101db60048036038101906101d6919061187e565b6105a9565b005b6101f760048036038101906101f29190611789565b6105c9565b60405161020491906117f7565b60405180910390f35b610227600480360381019061022291906118d1565b6105db565b604051610234919061190d565b60405180910390f35b610245610695565b6040516102529190611731565b60405180910390f35b61027560048036038101906102709190611954565b610727565b005b610291600480360381019061028c9190611ac9565b61073d565b005b6102ad60048036038101906102a89190611789565b61075a565b6040516102ba9190611731565b60405180910390f35b6102dd60048036038101906102d89190611b4c565b6107c3565b6040516102ea9190611686565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103be57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103ce57506103cd82610857565b5b9050919050565b6060600080546103e490611bbb565b80601f016020809104026020016040519081016040528092919081815260200182805461041090611bbb565b801561045d5780601f106104325761010080835404028352916020019161045d565b820191906000526020600020905b81548152906001019060200180831161044057829003601f168201915b5050505050905090565b6000610472826108c1565b5061047c82610949565b9050919050565b6104958282610490610986565b61098e565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361050b5760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161050291906117f7565b60405180910390fd5b600061051f838361051a610986565b6109a0565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610595578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161058c93929190611bec565b60405180910390fd5b50505050565b6105a58282610bba565b5050565b6105c48383836040518060200160405280600081525061073d565b505050565b60006105d4826108c1565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361064e5760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161064591906117f7565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546106a490611bbb565b80601f01602080910402602001604051908101604052809291908181526020018280546106d090611bbb565b801561071d5780601f106106f25761010080835404028352916020019161071d565b820191906000526020600020905b81548152906001019060200180831161070057829003601f168201915b5050505050905090565b610739610732610986565b8383610bd8565b5050565b610748848484610499565b61075484848484610d47565b50505050565b6060610765826108c1565b506000610770610efe565b9050600081511161079057604051806020016040528060008152506107bb565b8061079a84610f15565b6040516020016107ab929190611c5f565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000806108cd83610fe3565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361094057826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610937919061190d565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b61099b8383836001611020565b505050565b6000806109ac84610fe3565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146109ee576109ed8184866111e5565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a7f57610a30600085600080611020565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610b02576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610bd48282604051806020016040528060008152506112a9565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c4957816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610c4091906117f7565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610d3a9190611686565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115610ef8578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610d8b610986565b8685856040518563ffffffff1660e01b8152600401610dad9493929190611cd8565b6020604051808303816000875af1925050508015610de957506040513d601f19601f82011682018060405250810190610de69190611d39565b60015b610e6d573d8060008114610e19576040519150601f19603f3d011682016040523d82523d6000602084013e610e1e565b606091505b506000815103610e6557836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610e5c91906117f7565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610ef657836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610eed91906117f7565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b606060006001610f24846112c5565b01905060008167ffffffffffffffff811115610f4357610f4261199e565b5b6040519080825280601f01601f191660200182016040528015610f755781602001600182028036833780820191505090505b509050600082602001820190505b600115610fd8578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610fcc57610fcb611d66565b5b04945060008503610f83575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806110595750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561118d576000611069846108c1565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156110d457508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156110e757506110e581846107c3565b155b1561112957826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161112091906117f7565b60405180910390fd5b811561118b57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6111f0838383611418565b6112a457600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361126557806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161125c919061190d565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161129b929190611d95565b60405180910390fd5b505050565b6112b383836114d9565b6112c06000848484610d47565b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611323577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161131957611318611d66565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611360576d04ee2d6d415b85acef8100000000838161135657611355611d66565b5b0492506020810190505b662386f26fc10000831061138f57662386f26fc10000838161138557611384611d66565b5b0492506010810190505b6305f5e10083106113b8576305f5e10083816113ae576113ad611d66565b5b0492506008810190505b61271083106113dd5761271083816113d3576113d2611d66565b5b0492506004810190505b6064831061140057606483816113f6576113f5611d66565b5b0492506002810190505b600a831061140f576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156114d057508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611491575061149084846107c3565b5b806114cf57508273ffffffffffffffffffffffffffffffffffffffff166114b783610949565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361154b5760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161154291906117f7565b60405180910390fd5b6000611559838360006109a0565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146115cd5760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016115c491906117f7565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61161b816115e6565b811461162657600080fd5b50565b60008135905061163881611612565b92915050565b600060208284031215611654576116536115dc565b5b600061166284828501611629565b91505092915050565b60008115159050919050565b6116808161166b565b82525050565b600060208201905061169b6000830184611677565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116db5780820151818401526020810190506116c0565b60008484015250505050565b6000601f19601f8301169050919050565b6000611703826116a1565b61170d81856116ac565b935061171d8185602086016116bd565b611726816116e7565b840191505092915050565b6000602082019050818103600083015261174b81846116f8565b905092915050565b6000819050919050565b61176681611753565b811461177157600080fd5b50565b6000813590506117838161175d565b92915050565b60006020828403121561179f5761179e6115dc565b5b60006117ad84828501611774565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117e1826117b6565b9050919050565b6117f1816117d6565b82525050565b600060208201905061180c60008301846117e8565b92915050565b61181b816117d6565b811461182657600080fd5b50565b60008135905061183881611812565b92915050565b60008060408385031215611855576118546115dc565b5b600061186385828601611829565b925050602061187485828601611774565b9150509250929050565b600080600060608486031215611897576118966115dc565b5b60006118a586828701611829565b93505060206118b686828701611829565b92505060406118c786828701611774565b9150509250925092565b6000602082840312156118e7576118e66115dc565b5b60006118f584828501611829565b91505092915050565b61190781611753565b82525050565b600060208201905061192260008301846118fe565b92915050565b6119318161166b565b811461193c57600080fd5b50565b60008135905061194e81611928565b92915050565b6000806040838503121561196b5761196a6115dc565b5b600061197985828601611829565b925050602061198a8582860161193f565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119d6826116e7565b810181811067ffffffffffffffff821117156119f5576119f461199e565b5b80604052505050565b6000611a086115d2565b9050611a1482826119cd565b919050565b600067ffffffffffffffff821115611a3457611a3361199e565b5b611a3d826116e7565b9050602081019050919050565b82818337600083830152505050565b6000611a6c611a6784611a19565b6119fe565b905082815260208101848484011115611a8857611a87611999565b5b611a93848285611a4a565b509392505050565b600082601f830112611ab057611aaf611994565b5b8135611ac0848260208601611a59565b91505092915050565b60008060008060808587031215611ae357611ae26115dc565b5b6000611af187828801611829565b9450506020611b0287828801611829565b9350506040611b1387828801611774565b925050606085013567ffffffffffffffff811115611b3457611b336115e1565b5b611b4087828801611a9b565b91505092959194509250565b60008060408385031215611b6357611b626115dc565b5b6000611b7185828601611829565b9250506020611b8285828601611829565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611bd357607f821691505b602082108103611be657611be5611b8c565b5b50919050565b6000606082019050611c0160008301866117e8565b611c0e60208301856118fe565b611c1b60408301846117e8565b949350505050565b600081905092915050565b6000611c39826116a1565b611c438185611c23565b9350611c538185602086016116bd565b80840191505092915050565b6000611c6b8285611c2e565b9150611c778284611c2e565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611caa82611c83565b611cb48185611c8e565b9350611cc48185602086016116bd565b611ccd816116e7565b840191505092915050565b6000608082019050611ced60008301876117e8565b611cfa60208301866117e8565b611d0760408301856118fe565b8181036060830152611d198184611c9f565b905095945050505050565b600081519050611d3381611612565b92915050565b600060208284031215611d4f57611d4e6115dc565b5b6000611d5d84828501611d24565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000604082019050611daa60008301856117e8565b611db760208301846118fe565b939250505056fea2646970667358221220e2a98363a8bab72385d15c5d5c0af54350652928b22f31dd076cb544b48dc33f64736f6c63430008170033";

type MockERC721SecondConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC721SecondConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC721Second__factory extends ContractFactory {
  constructor(...args: MockERC721SecondConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockERC721Second> {
    return super.deploy(overrides || {}) as Promise<MockERC721Second>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockERC721Second {
    return super.attach(address) as MockERC721Second;
  }
  override connect(signer: Signer): MockERC721Second__factory {
    return super.connect(signer) as MockERC721Second__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721SecondInterface {
    return new utils.Interface(_abi) as MockERC721SecondInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC721Second {
    return new Contract(address, _abi, signerOrProvider) as MockERC721Second;
  }
}
