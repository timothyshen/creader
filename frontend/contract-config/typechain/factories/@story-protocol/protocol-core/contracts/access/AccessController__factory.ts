/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  AccessController,
  AccessControllerInterface,
} from "../../../../../@story-protocol/protocol-core/contracts/access/AccessController";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "AccessController__BothCallerAndRecipientAreNotRegisteredModule",
    type: "error",
  },
  {
    inputs: [],
    name: "AccessController__CallerIsNotIPAccountOrOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ipAccount",
        type: "address",
      },
    ],
    name: "AccessController__IPAccountIsNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "AccessController__IPAccountIsZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ipAccount",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "func",
        type: "bytes4",
      },
    ],
    name: "AccessController__PermissionDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "AccessController__PermissionIsNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "AccessController__SignerIsZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "AccessController__ZeroAccessManager",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "AccessManagedInvalidAuthority",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "delay",
        type: "uint32",
      },
    ],
    name: "AccessManagedRequiredDelay",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AccessManagedUnauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "ipAccountOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "ipAccount",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "func",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "permission",
        type: "uint8",
      },
    ],
    name: "PermissionSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accessManager",
        type: "address",
      },
    ],
    name: "__ProtocolPausable_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ipAccount",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "func",
        type: "bytes4",
      },
    ],
    name: "checkPermission",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ipAccount",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "func",
        type: "bytes4",
      },
    ],
    name: "getPermission",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accessManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isConsumingScheduledOp",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ipAccountRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "moduleRegistry",
        type: "address",
      },
    ],
    name: "setAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "ipAccount",
            type: "address",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes4",
            name: "func",
            type: "bytes4",
          },
          {
            internalType: "uint8",
            name: "permission",
            type: "uint8",
          },
        ],
        internalType: "struct AccessPermission.Permission[]",
        name: "permissions",
        type: "tuple[]",
      },
    ],
    name: "setBatchPermissions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ipAccount",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "func",
        type: "bytes4",
      },
      {
        internalType: "uint8",
        name: "permission",
        type: "uint8",
      },
    ],
    name: "setPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051611efa6100fd60003960008181610f0301528181610f2c01526110730152611efa6000f3fe6080604052600436106100f35760003560e01c80637bac65fd1161008a57806390107afe1161005957806390107afe14610284578063ad3cb1cc146102a4578063bf7e214f146102e2578063c4d66de81461030f57600080fd5b80637bac65fd146102015780637dfd0ddb146102215780638456cb59146102415780638fb360371461025657600080fd5b806352d1902d116100c657806352d1902d146101625780635c975abb1461018a5780636597c2e5146101af5780637a9e5e4b146101e157600080fd5b806313938a8a146100f8578063198fdd981461011a5780633f4ba83a1461013a5780634f1ef2861461014f575b600080fd5b34801561010457600080fd5b5061011861011336600461194b565b61032f565b005b34801561012657600080fd5b50610118610135366004611a5c565b6103e5565b34801561014657600080fd5b506101186104fd565b61011861015d366004611a79565b610514565b34801561016e57600080fd5b5061017761052f565b6040519081526020015b60405180910390f35b34801561019657600080fd5b5061019f61054c565b6040519015158152602001610181565b3480156101bb57600080fd5b506101cf6101ca366004611b21565b61056c565b60405160ff9091168152602001610181565b3480156101ed57600080fd5b506101186101fc366004611a5c565b6105a9565b34801561020d57600080fd5b5061011861021c366004611b7b565b610631565b34801561022d57600080fd5b5061011861023c366004611b21565b6108ad565b34801561024d57600080fd5b50610118610baa565b34801561026257600080fd5b5061026b610bbb565b6040516001600160e01b03199091168152602001610181565b34801561029057600080fd5b5061011861029f366004611be6565b610bf4565b3480156102b057600080fd5b506102d5604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101819190611c43565b3480156102ee57600080fd5b506102f7610c69565b6040516001600160a01b039091168152602001610181565b34801561031b57600080fd5b5061011861032a366004611a5c565b610c85565b60005b81518110156103e1576103d982828151811061035057610350611c76565b60200260200101516000015183838151811061036e5761036e611c76565b60200260200101516020015184848151811061038c5761038c611c76565b6020026020010151604001518585815181106103aa576103aa611c76565b6020026020010151606001518686815181106103c8576103c8611c76565b602002602001015160800151610631565b600101610332565b5050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff1660008115801561042b5750825b905060008267ffffffffffffffff1660011480156104485750303b155b905081158015610456575080155b156104745760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561049e57845460ff60401b1916600160401b1785555b6104a786610d76565b6104af610d8a565b83156104f557845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b61050a335b600036610d9a565b610512610e98565b565b61051c610ef8565b61052582610f9d565b6103e18282610fa6565b6000610539611068565b50600080516020611e6583398151915290565b6000610567600080516020611ea58339815191525460ff1690565b905090565b6000600080516020611e85833981519152808261058b888888886110b1565b815260208101919091526040016000205460ff169695505050505050565b336105b2610c69565b6001600160a01b0316816001600160a01b0316146105f25760405162d1953b60e31b81526001600160a01b03821660048201526024015b60405180910390fd5b816001600160a01b03163b600003610628576040516361798f2f60e11b81526001600160a01b03831660048201526024016105e9565b6103e182611170565b6106396111d1565b6001600160a01b03851661066057604051630477f0f560e41b815260040160405180910390fd5b6001600160a01b0384166106875760405163238498ab60e01b815260040160405180910390fd5b7fe80df7f3a04d1e1a0b61a4a820184d4b4a2f8a6a808f315dbcc7b502f40b180154600080516020611e85833981519152906106cc906001600160a01b0316876111f7565b6106f457604051633402383360e11b81526001600160a01b03871660048201526024016105e9565b60028260ff161115610719576040516307e5a97160e01b815260040160405180910390fd5b6001600160a01b03861633148015906107a55750336001600160a01b0316866001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610775573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107999190611c8c565b6001600160a01b031614155b156107c35760405163eb9e41b960e01b815260040160405180910390fd5b6107d0868686868661139d565b836001600160a01b0316856001600160a01b0316876001600160a01b03167f366214cf742f11794f23ac52e40786dacd98f4d23e78ffc7db468883324c4224896001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561084d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108719190611c8c565b604080516001600160a01b0390921682526001600160e01b03198916602083015260ff88169082015260600160405180910390a4505050505050565b7fe80df7f3a04d1e1a0b61a4a820184d4b4a2f8a6a808f315dbcc7b502f40b180154600080516020611e85833981519152906108f2906001600160a01b0316866111f7565b61091a57604051633402383360e11b81526001600160a01b03861660048201526024016105e9565b836001600160a01b0316856001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610962573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109869190611c8c565b6001600160a01b03160361099a5750610ba4565b6001600160a01b0383163014801590610a205750600281015460405163c3c5a54760e01b81526001600160a01b0385811660048301529091169063c3c5a54790602401602060405180830381865afa1580156109fa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1e9190611cb9565b155b8015610a995750600281015460405163c3c5a54760e01b81526001600160a01b0386811660048301529091169063c3c5a54790602401602060405180830381865afa158015610a73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a979190611cb9565b155b15610aca57604051638ea0b11160e01b81526001600160a01b038086166004830152841660248201526044016105e9565b6000610ad88686868661056c565b60ff1690506000198101610aed575050610ba4565b6001198101610b17578585858560405163b3e9692160e01b81526004016105e99493929190611cd4565b6000610b258787878461056c565b905060001960ff821601610b3b57505050610ba4565b60011960ff821601610b68578686868660405163b3e9692160e01b81526004016105e99493929190611cd4565b6001610b77888860008061056c565b60ff1614610ba0578686868660405163b3e9692160e01b81526004016105e99493929190611cd4565b5050505b50505050565b610bb333610502565b6105126113ea565b600080516020611e45833981519152805460009190600160a01b900460ff16610be5576000610bee565b638fb3603760e01b5b91505090565b610bfd33610502565b7fe80df7f3a04d1e1a0b61a4a820184d4b4a2f8a6a808f315dbcc7b502f40b180180546001600160a01b039384166001600160a01b0319918216179091557fe80df7f3a04d1e1a0b61a4a820184d4b4a2f8a6a808f315dbcc7b502f40b18028054929093169116179055565b600080516020611e45833981519152546001600160a01b031690565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff16600081158015610ccb5750825b905060008267ffffffffffffffff166001148015610ce85750303b155b905081158015610cf6575080155b15610d145760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610d3e57845460ff60401b1916600160401b1785555b6001600160a01b038616610d65576040516344dd44cf60e11b815260040160405180910390fd5b610d6e866103e5565b6104af611433565b610d7e611437565b610d8781611480565b50565b610d92611437565b610512611491565b600080516020611e45833981519152600080610dd5610db7610c69565b8730610dc7600460008a8c611d07565b610dd091611d31565b6114b2565b91509150816104f55763ffffffff811615610e7557825460ff60a01b1916600160a01b178355610e03610c69565b6001600160a01b03166394c7d7ee8787876040518463ffffffff1660e01b8152600401610e3293929190611d61565b600060405180830381600087803b158015610e4c57600080fd5b505af1158015610e60573d6000803e3d6000fd5b5050845460ff60a01b19168555506104f59050565b60405162d1953b60e31b81526001600160a01b03871660048201526024016105e9565b610ea06115be565b600080516020611ea5833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610f7f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610f73600080516020611e65833981519152546001600160a01b031690565b6001600160a01b031614155b156105125760405163703e46dd60e11b815260040160405180910390fd5b610d8733610502565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611000575060408051601f3d908101601f19168201909252610ffd91810190611da1565b60015b61102857604051634c9c8ce360e01b81526001600160a01b03831660048201526024016105e9565b600080516020611e65833981519152811461105957604051632a87526960e21b8152600481018290526024016105e9565b61106383836115e3565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105125760405163703e46dd60e11b815260040160405180910390fd5b6000846001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111159190611c8c565b604080516001600160a01b0392831660208083019190915297831681830152958216606087015293166080850152506001600160e01b03191660a0808401919091528151808403909101815260c09092019052805191012090565b600080516020611e4583398151915280546001600160a01b0383166001600160a01b03199091168117825560408051918252517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9181900360200190a15050565b6111d961054c565b156105125760405163d93c066560e01b815260040160405180910390fd5b60006001600160a01b03821661120f57506000611397565b816001600160a01b03163b60000361122957506000611397565b61123282611639565b61123e57506000611397565b61124f82636faff5f160e01b61166c565b61125b57506000611397565b61126c8263ebe268b360e01b61166c565b61127857506000611397565b6112898263f6c924e760e01b61166c565b61129557506000611397565b6000806000846001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156112d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fc9190611dba565b6040516387020f9560e01b8152600481018490526001600160a01b038084166024830152604482018390529396509194509250908716906387020f9590606401602060405180830381865afa158015611359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137d9190611c8c565b6001600160a01b0316856001600160a01b03161493505050505b92915050565b600080516020611e85833981519152818160006113bc898989896110b1565b815260200190815260200160002060006101000a81548160ff021916908360ff160217905550505050505050565b6113f26111d1565b600080516020611ea5833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610eda565b6105125b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661051257604051631afcd79f60e31b815260040160405180910390fd5b611488611437565b610d8781611170565b611499611437565b600080516020611ea5833981519152805460ff19169055565b6040516001600160a01b03848116602483015283811660448301526001600160e01b03198316606483015260009182918291829189169060840160408051601f198184030181529181526020820180516001600160e01b031663b700961360e01b179052516115219190611df3565b600060405180830381855afa9150503d806000811461155c576040519150601f19603f3d011682016040523d82523d6000602084013e611561565b606091505b509150915081156115b357604081511061159357808060200190518101906115899190611e0f565b90945092506115b3565b60208151106115b357808060200190518101906115b09190611cb9565b93505b505094509492505050565b6115c661054c565b61051257604051638dfc202b60e01b815260040160405180910390fd5b6115ec8261168f565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156116315761106382826116f4565b6103e161176a565b600061164c826301ffc9a760e01b611789565b80156113975750611665826001600160e01b0319611789565b1592915050565b600061167783611639565b801561168857506116888383611789565b9392505050565b806001600160a01b03163b6000036116c557604051634c9c8ce360e01b81526001600160a01b03821660048201526024016105e9565b600080516020611e6583398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516117119190611df3565b600060405180830381855af49150503d806000811461174c576040519150601f19603f3d011682016040523d82523d6000602084013e611751565b606091505b5091509150611761858383611813565b95945050505050565b34156105125760405163b398979f60e01b815260040160405180910390fd5b6040516001600160e01b031982166024820152600090819060440160408051601f19818403018152919052602080820180516001600160e01b03166301ffc9a760e01b178152825192935060009283928392909183918a617530fa92503d915060005190508280156117fc575060208210155b80156118085750600081115b979650505050505050565b606082611828576118238261186f565b611688565b815115801561183f57506001600160a01b0384163b155b1561186857604051639996b31560e01b81526001600160a01b03851660048201526024016105e9565b5092915050565b80511561187f5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156118d1576118d1611898565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561190057611900611898565b604052919050565b6001600160a01b0381168114610d8757600080fd5b80356001600160e01b03198116811461193557600080fd5b919050565b803560ff8116811461193557600080fd5b6000602080838503121561195e57600080fd5b823567ffffffffffffffff8082111561197657600080fd5b818501915085601f83011261198a57600080fd5b81358181111561199c5761199c611898565b6119aa848260051b016118d7565b818152848101925060a09182028401850191888311156119c957600080fd5b938501935b82851015611a505780858a0312156119e65760008081fd5b6119ee6118ae565b85356119f981611908565b815285870135611a0881611908565b81880152604086810135611a1b81611908565b908201526060611a2c87820161191d565b908201526080611a3d87820161193a565b90820152845293840193928501926119ce565b50979650505050505050565b600060208284031215611a6e57600080fd5b813561168881611908565b60008060408385031215611a8c57600080fd5b8235611a9781611908565b915060208381013567ffffffffffffffff80821115611ab557600080fd5b818601915086601f830112611ac957600080fd5b813581811115611adb57611adb611898565b611aed601f8201601f191685016118d7565b91508082528784828501011115611b0357600080fd5b80848401858401376000848284010152508093505050509250929050565b60008060008060808587031215611b3757600080fd5b8435611b4281611908565b93506020850135611b5281611908565b92506040850135611b6281611908565b9150611b706060860161191d565b905092959194509250565b600080600080600060a08688031215611b9357600080fd5b8535611b9e81611908565b94506020860135611bae81611908565b93506040860135611bbe81611908565b9250611bcc6060870161191d565b9150611bda6080870161193a565b90509295509295909350565b60008060408385031215611bf957600080fd5b8235611c0481611908565b91506020830135611c1481611908565b809150509250929050565b60005b83811015611c3a578181015183820152602001611c22565b50506000910152565b6020815260008251806020840152611c62816040850160208701611c1f565b601f01601f19169190910160400192915050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611c9e57600080fd5b815161168881611908565b8051801515811461193557600080fd5b600060208284031215611ccb57600080fd5b61168882611ca9565b6001600160a01b0394851681529284166020840152921660408201526001600160e01b0319909116606082015260800190565b60008085851115611d1757600080fd5b83861115611d2457600080fd5b5050820193919092039150565b6001600160e01b03198135818116916004851015611d595780818660040360031b1b83161692505b505092915050565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b600060208284031215611db357600080fd5b5051919050565b600080600060608486031215611dcf57600080fd5b835192506020840151611de181611908565b80925050604084015190509250925092565b60008251611e05818460208701611c1f565b9190910192915050565b60008060408385031215611e2257600080fd5b611e2b83611ca9565b9150602083015163ffffffff81168114611c1457600080fdfef3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a00360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbce80df7f3a04d1e1a0b61a4a820184d4b4a2f8a6a808f315dbcc7b502f40b1800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a26469706673582212204d98b7a409993e203547ca7ae3dfde05e6527f6f2c5b192d0cb9da4d441f7e1164736f6c63430008170033";

type AccessControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccessControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccessController__factory extends ContractFactory {
  constructor(...args: AccessControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AccessController> {
    return super.deploy(overrides || {}) as Promise<AccessController>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AccessController {
    return super.attach(address) as AccessController;
  }
  override connect(signer: Signer): AccessController__factory {
    return super.connect(signer) as AccessController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessControllerInterface {
    return new utils.Interface(_abi) as AccessControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccessController {
    return new Contract(address, _abi, signerOrProvider) as AccessController;
  }
}
