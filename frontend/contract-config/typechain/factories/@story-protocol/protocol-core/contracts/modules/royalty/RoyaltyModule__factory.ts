/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  RoyaltyModule,
  RoyaltyModuleInterface,
} from "../../../../../../@story-protocol/protocol-core/contracts/modules/royalty/RoyaltyModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "disputeModule",
        type: "address",
      },
      {
        internalType: "address",
        name: "licenseRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "AccessManagedInvalidAuthority",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "delay",
        type: "uint32",
      },
    ],
    name: "AccessManagedRequiredDelay",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AccessManagedUnauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyModule__CanOnlyMintSelectedPolicy",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyModule__IncompatibleRoyaltyPolicy",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyModule__IpIsExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyModule__IpIsTagged",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyModule__NoParentsOnLinking",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyModule__NoRoyaltyPolicySet",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyModule__NotAllowedCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyModule__NotWhitelistedRoyaltyPolicy",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyModule__NotWhitelistedRoyaltyToken",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyModule__ZeroAccessManager",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyModule__ZeroDisputeModule",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyModule__ZeroLicenseRegistry",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyModule__ZeroLicensingModule",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyModule__ZeroRoyaltyPolicy",
    type: "error",
  },
  {
    inputs: [],
    name: "RoyaltyModule__ZeroRoyaltyToken",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiverIpId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "payerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LicenseMintingFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiverIpId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "payerIpId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RoyaltyPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "royaltyPolicy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "RoyaltyPolicyWhitelistUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "RoyaltyTokenWhitelistUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "DISPUTE_MODULE",
    outputs: [
      {
        internalType: "contract IDisputeModule",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LICENSE_REGISTRY",
    outputs: [
      {
        internalType: "contract ILicenseRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accessManager",
        type: "address",
      },
    ],
    name: "__ProtocolPausable_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accessManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isConsumingScheduledOp",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "royaltyPolicy",
        type: "address",
      },
    ],
    name: "isWhitelistedRoyaltyPolicy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isWhitelistedRoyaltyToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "licensingModule",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ipId",
        type: "address",
      },
      {
        internalType: "address",
        name: "royaltyPolicy",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "licenseData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "externalData",
        type: "bytes",
      },
    ],
    name: "onLicenseMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ipId",
        type: "address",
      },
      {
        internalType: "address",
        name: "royaltyPolicy",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "parentIpIds",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "licenseData",
        type: "bytes[]",
      },
      {
        internalType: "bytes",
        name: "externalData",
        type: "bytes",
      },
    ],
    name: "onLinkToParents",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiverIpId",
        type: "address",
      },
      {
        internalType: "address",
        name: "payerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "licenseRoyaltyPolicy",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payLicenseMintingFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiverIpId",
        type: "address",
      },
      {
        internalType: "address",
        name: "payerIpId",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payRoyaltyOnBehalf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ipId",
        type: "address",
      },
    ],
    name: "royaltyPolicies",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "licensing",
        type: "address",
      },
    ],
    name: "setLicensingModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "royaltyPolicy",
        type: "address",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "whitelistRoyaltyPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "whitelistRoyaltyToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0604052306080523480156200001557600080fd5b50604051620027fb380380620027fb83398101604081905262000038916200017e565b6001600160a01b0382166200006057604051631c4f53d960e21b815260040160405180910390fd5b6001600160a01b0381166200008857604051633c00bfed60e11b815260040160405180910390fd5b6001600160a01b0380831660c052811660a052620000a5620000ad565b5050620001b6565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000fe5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146200015e5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b80516001600160a01b03811681146200017957600080fd5b919050565b600080604083850312156200019257600080fd5b6200019d8362000161565b9150620001ad6020840162000161565b90509250929050565b60805160a05160c0516125eb620002106000396000818161058401528181610df7015261121401526000818161055001528181610f0101526113a501526000818161171901528181611742015261187201526125eb6000f3fe6080604052600436106101815760003560e01c80638456cb59116100d1578063bf7e214f1161008a578063cc5b608411610064578063cc5b6084146104fe578063d2577f3b1461051e578063f0ebdc831461053e578063f943f0901461057257600080fd5b8063bf7e214f146104a9578063c325878e146104be578063c4d66de8146104de57600080fd5b80638456cb591461038957806385863e511461039e5780638fb36037146103be578063926e04fd146103ec5780639646781414610432578063ad3cb1cc1461047857600080fd5b806349fb46151161013e57806352d1902d1161011857806352d1902d1461031c5780635c975abb1461033f5780636bf41881146103545780637a9e5e4b1461036957600080fd5b806349fb4615146102c95780634f1ef286146102e9578063520cbac6146102fc57600080fd5b806301ffc9a71461018657806306fdde03146101bb578063198fdd981461020257806321dda4b5146102245780632930af8b146102445780633f4ba83a146102b4575b600080fd5b34801561019257600080fd5b506101a66101a1366004611d20565b6105a6565b60405190151581526020015b60405180910390f35b3480156101c757600080fd5b506101f56040518060400160405280600e81526020016d524f59414c54595f4d4f44554c4560901b81525081565b6040516101b29190611d9a565b34801561020e57600080fd5b5061022261021d366004611dc9565b6105d1565b005b34801561023057600080fd5b5061022261023f366004611f83565b6106e9565b34801561025057600080fd5b5061029c61025f366004611dc9565b6001600160a01b0390811660009081527f98dd2c34f21d19fd1d178ed731f3db3d03e0b4e39f02dbeb040e80c9427a030360205260409020541690565b6040516001600160a01b0390911681526020016101b2565b3480156102c057600080fd5b50610222610901565b3480156102d557600080fd5b506102226102e4366004612078565b610918565b6102226102f73660046120af565b6109ca565b34801561030857600080fd5b50610222610317366004612078565b6109e9565b34801561032857600080fd5b50610331610a92565b6040519081526020016101b2565b34801561034b57600080fd5b506101a6610aaf565b34801561036057600080fd5b5061029c610acf565b34801561037557600080fd5b50610222610384366004611dc9565b610af0565b34801561039557600080fd5b50610222610b78565b3480156103aa57600080fd5b506102226103b93660046120fd565b610b89565b3480156103ca57600080fd5b506103d3610cf4565b6040516001600160e01b031990911681526020016101b2565b3480156103f857600080fd5b506101a6610407366004611dc9565b6001600160a01b03166000908152600080516020612536833981519152602052604090205460ff1690565b34801561043e57600080fd5b506101a661044d366004611dc9565b6001600160a01b03166000908152600080516020612596833981519152602052604090205460ff1690565b34801561048457600080fd5b506101f5604051806040016040528060058152602001640352e302e360dc1b81525081565b3480156104b557600080fd5b5061029c610d2d565b3480156104ca57600080fd5b506102226104d936600461218e565b610d49565b3480156104ea57600080fd5b506102226104f9366004611dc9565b611034565b34801561050a57600080fd5b50610222610519366004611dc9565b61112d565b34801561052a57600080fd5b506102226105393660046121ea565b61118f565b34801561054a57600080fd5b5061029c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561057e57600080fd5b5061029c7f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b0319821663246935e560e01b14806105cb57506105cb8261150b565b92915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156106175750825b905060008267ffffffffffffffff1660011480156106345750303b155b905081158015610642575080155b156106605760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561068a57845460ff60401b1916600160401b1785555b61069386611540565b61069b611554565b83156106e157845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6106f1611564565b6000805160206124f683398151915280546001600160a01b0316331461072a5760405163379a102f60e11b815260040160405180910390fd5b6001600160a01b038716600090815260008051602061259683398151915260205260409020546000805160206124f68339815191529060ff166107805760405163035b13fd60e11b815260040160405180910390fd5b60008690036107a2576040516305d3644d60e11b815260040160405180910390fd5b60005b63ffffffff81168711156108525760008260030160008a8a8563ffffffff168181106107d3576107d3612235565b90506020020160208101906107e89190611dc9565b6001600160a01b039081168252602082019290925260400160002054811691508a16811480159061082157506001600160a01b03811615155b1561083f57604051639739ce9160e01b815260040160405180910390fd5b508061084a8161224b565b9150506107a5565b506001600160a01b0389811660009081526003830160205260409081902080546001600160a01b031916928b169283179055516317da174760e11b8152632fb42e8e906108ad908c908b908b908b908b908b906004016122a5565b600060405180830381600087803b1580156108c757600080fd5b505af11580156108db573d6000803e3d6000fd5b5050505050506108f8600160008051602061257683398151915255565b50505050505050565b61090e335b6000366115b0565b6109166116ae565b565b61092133610906565b6001600160a01b0382166109485760405163b3c4f5c560e01b815260040160405180910390fd5b6001600160a01b03821660008181526000805160206125968339815191526020908152604091829020805460ff19168515159081179091558251938452908301526000805160206124f6833981519152917f1f584640e1aae6441a6deba8d18148f5c9fb11a0bd7640e4b2808383a966269091015b60405180910390a1505050565b6109d261170e565b6109db8261179c565b6109e582826117a5565b5050565b6109f233610906565b6001600160a01b038216610a19576040516335f6cdcb60e11b815260040160405180910390fd5b6001600160a01b03821660008181526000805160206125368339815191526020908152604091829020805460ff19168515159081179091558251938452908301526000805160206124f6833981519152917fb40e5b8c4310e269d81608ec0e28372febb69a03ed8ace904c86459366cc362791016109bd565b6000610a9c611867565b5060008051602061251683398151915290565b6000610aca6000805160206125568339815191525460ff1690565b905090565b60006000805160206124f68339815191525b546001600160a01b0316919050565b33610af9610d2d565b6001600160a01b0316816001600160a01b031614610b395760405162d1953b60e31b81526001600160a01b03821660048201526024015b60405180910390fd5b816001600160a01b03163b600003610b6f576040516361798f2f60e11b81526001600160a01b0383166004820152602401610b30565b6109e5826118b0565b610b8133610906565b610916611911565b610b91611564565b6000805160206124f683398151915280546001600160a01b03163314610bca5760405163379a102f60e11b815260040160405180910390fd5b6001600160a01b038616600090815260008051602061259683398151915260205260409020546000805160206124f68339815191529060ff16610c205760405163035b13fd60e11b815260040160405180910390fd5b6001600160a01b03808916600090815260038301602052604090205481169088168114801590610c5857506001600160a01b03811615155b15610c765760405163335baa4760e21b815260040160405180910390fd5b60405162606e9d60e01b81526001600160a01b0389169062606e9d90610ca8908c908b908b908b908b9060040161236a565b600060405180830381600087803b158015610cc257600080fd5b505af1158015610cd6573d6000803e3d6000fd5b505050505050506106e1600160008051602061257683398151915255565b6000805160206124d6833981519152805460009190600160a01b900460ff16610d1e576000610d27565b638fb3603760e01b5b91505090565b6000805160206124d6833981519152546001600160a01b031690565b6000805160206124f683398151915280546001600160a01b03163314610d825760405163379a102f60e11b815260040160405180910390fd5b6001600160a01b038316600090815260008051602061253683398151915260205260409020546000805160206124f68339815191529060ff16610dd857604051630e44f8ef60e31b815260040160405180910390fd5b6040516309fa362160e11b81526001600160a01b0388811660048301527f000000000000000000000000000000000000000000000000000000000000000016906313f46c4290602401602060405180830381865afa158015610e3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6291906123a2565b15610e8057604051635ffb0c9960e01b815260040160405180910390fd5b6001600160a01b038516610ea757604051630d5c3d2f60e41b815260040160405180910390fd5b6001600160a01b038516600090815260018201602052604090205460ff16610ee25760405163035b13fd60e11b815260040160405180910390fd5b6040516313655c9560e31b81526001600160a01b0388811660048301527f00000000000000000000000000000000000000000000000000000000000000001690639b2ae4a890602401602060405180830381865afa158015610f48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6c91906123a2565b15610f8a576040516333437a5b60e11b815260040160405180910390fd5b604051635be8968b60e01b81526001600160a01b03861690635be8968b90610fbc9089908b90899089906004016123bf565b600060405180830381600087803b158015610fd657600080fd5b505af1158015610fea573d6000803e3d6000fd5b505050507f6d0da56cef79c5ded8a144464d37388ba6113852dd5c33ad704b258a371a4e8a8787868660405161102394939291906123bf565b60405180910390a150505050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff1660008115801561107a5750825b905060008267ffffffffffffffff1660011480156110975750303b155b9050811580156110a5575080155b156110c35760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156110ed57845460ff60401b1916600160401b1785555b6001600160a01b0386166111145760405163e13287ed60e01b815260040160405180910390fd5b61111d866105d1565b61112561195a565b61069b61196a565b61113633610906565b6001600160a01b03811661115d57604051631f17bb8960e21b815260040160405180910390fd5b806000805160206124f68339815191525b80546001600160a01b0319166001600160a01b039290921691909117905550565b611197611564565b61119f611972565b6001600160a01b038216600090815260008051602061253683398151915260205260409020546000805160206124f68339815191529060ff166111f557604051630e44f8ef60e31b815260040160405180910390fd5b6040516309fa362160e11b81526001600160a01b0386811660048301527f000000000000000000000000000000000000000000000000000000000000000091908216906313f46c4290602401602060405180830381865afa15801561125e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128291906123a2565b806112f257506040516309fa362160e11b81526001600160a01b0386811660048301528216906313f46c4290602401602060405180830381865afa1580156112ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f291906123a2565b1561131057604051635ffb0c9960e01b815260040160405180910390fd5b6001600160a01b038086166000908152600384016020526040902054168061134b57604051630d5c3d2f60e41b815260040160405180910390fd5b6001600160a01b038116600090815260018401602052604090205460ff166113865760405163035b13fd60e11b815260040160405180910390fd5b6040516313655c9560e31b81526001600160a01b0388811660048301527f00000000000000000000000000000000000000000000000000000000000000001690639b2ae4a890602401602060405180830381865afa1580156113ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141091906123a2565b1561142e576040516333437a5b60e11b815260040160405180910390fd5b604051635be8968b60e01b81526001600160a01b03821690635be8968b906114609033908b908a908a906004016123bf565b600060405180830381600087803b15801561147a57600080fd5b505af115801561148e573d6000803e3d6000fd5b5050604080516001600160a01b038b811682528a811660208301523382840152891660608201526080810188905290517fe0ee75d70c5bcafc95db3e81961af1375efcd0e19fbfd7cae8a85f41c68e2d2d93509081900360a0019150a1505050611505600160008051602061257683398151915255565b50505050565b60006001600160e01b031982166306fdde0360e01b14806105cb57506301ffc9a760e01b6001600160e01b03198316146105cb565b611548611998565b611551816119e1565b50565b61155c611998565b6109166119f2565b60008051602061257683398151915280546001190161159657604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b600160008051602061257683398151915255565b6000805160206124d68339815191526000806115eb6115cd610d2d565b87306115dd600460008a8c6123e9565b6115e691612413565b611a13565b91509150816106e15763ffffffff81161561168b57825460ff60a01b1916600160a01b178355611619610d2d565b6001600160a01b03166394c7d7ee8787876040518463ffffffff1660e01b815260040161164893929190612443565b600060405180830381600087803b15801561166257600080fd5b505af1158015611676573d6000803e3d6000fd5b5050845460ff60a01b19168555506106e19050565b60405162d1953b60e31b81526001600160a01b0387166004820152602401610b30565b6116b6611b1f565b600080516020612556833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061177e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611772611b44565b6001600160a01b031614155b156109165760405163703e46dd60e11b815260040160405180910390fd5b61155133610906565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156117ff575060408051601f3d908101601f191682019092526117fc91810190612468565b60015b61182757604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610b30565b600080516020612516833981519152811461185857604051632a87526960e21b815260048101829052602401610b30565b6118628383611b5a565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109165760405163703e46dd60e11b815260040160405180910390fd5b6000805160206124d683398151915280546001600160a01b0383166001600160a01b03199091168117825560408051918252517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9181900360200190a15050565b611919611972565b600080516020612556833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336116f0565b611962611998565b610916611bb0565b610916611998565b61197a610aaf565b156109165760405163d93c066560e01b815260040160405180910390fd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661091657604051631afcd79f60e31b815260040160405180910390fd5b6119e9611998565b611551816118b0565b6119fa611998565b600080516020612556833981519152805460ff19169055565b6040516001600160a01b03848116602483015283811660448301526001600160e01b03198316606483015260009182918291829189169060840160408051601f198184030181529181526020820180516001600160e01b031663b700961360e01b17905251611a829190612481565b600060405180830381855afa9150503d8060008114611abd576040519150601f19603f3d011682016040523d82523d6000602084013e611ac2565b606091505b50915091508115611b14576040815110611af45780806020019051810190611aea919061249d565b9094509250611b14565b6020815110611b145780806020019051810190611b1191906123a2565b93505b505094509492505050565b611b27610aaf565b61091657604051638dfc202b60e01b815260040160405180910390fd5b6000600080516020612516833981519152610ae1565b611b6382611bb8565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115611ba8576118628282611c03565b6109e5611c79565b61159c611998565b806001600160a01b03163b600003611bee57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610b30565b8060008051602061251683398151915261116e565b6060600080846001600160a01b031684604051611c209190612481565b600060405180830381855af49150503d8060008114611c5b576040519150601f19603f3d011682016040523d82523d6000602084013e611c60565b606091505b5091509150611c70858383611c98565b95945050505050565b34156109165760405163b398979f60e01b815260040160405180910390fd5b606082611cad57611ca882611cf7565b611cf0565b8151158015611cc457506001600160a01b0384163b155b15611ced57604051639996b31560e01b81526001600160a01b0385166004820152602401610b30565b50805b9392505050565b805115611d075780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b600060208284031215611d3257600080fd5b81356001600160e01b031981168114611cf057600080fd5b60005b83811015611d65578181015183820152602001611d4d565b50506000910152565b60008151808452611d86816020860160208601611d4a565b601f01601f19169290920160200192915050565b602081526000611cf06020830184611d6e565b80356001600160a01b0381168114611dc457600080fd5b919050565b600060208284031215611ddb57600080fd5b611cf082611dad565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611e2357611e23611de4565b604052919050565b600082601f830112611e3c57600080fd5b813567ffffffffffffffff811115611e5657611e56611de4565b611e69601f8201601f1916602001611dfa565b818152846020838601011115611e7e57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112611eac57600080fd5b8135602067ffffffffffffffff80831115611ec957611ec9611de4565b8260051b611ed8838201611dfa565b9384528581018301938381019088861115611ef257600080fd5b84880192505b85831015611f2e57823584811115611f105760008081fd5b611f1e8a87838c0101611e2b565b8352509184019190840190611ef8565b98975050505050505050565b60008083601f840112611f4c57600080fd5b50813567ffffffffffffffff811115611f6457600080fd5b602083019150836020828501011115611f7c57600080fd5b9250929050565b600080600080600080600060a0888a031215611f9e57600080fd5b611fa788611dad565b9650611fb560208901611dad565b9550604088013567ffffffffffffffff80821115611fd257600080fd5b818a0191508a601f830112611fe657600080fd5b813581811115611ff557600080fd5b8b60208260051b850101111561200a57600080fd5b6020830197508096505060608a013591508082111561202857600080fd5b6120348b838c01611e9b565b945060808a013591508082111561204a57600080fd5b506120578a828b01611f3a565b989b979a50959850939692959293505050565b801515811461155157600080fd5b6000806040838503121561208b57600080fd5b61209483611dad565b915060208301356120a48161206a565b809150509250929050565b600080604083850312156120c257600080fd5b6120cb83611dad565b9150602083013567ffffffffffffffff8111156120e757600080fd5b6120f385828601611e2b565b9150509250929050565b6000806000806000806080878903121561211657600080fd5b61211f87611dad565b955061212d60208801611dad565b9450604087013567ffffffffffffffff8082111561214a57600080fd5b6121568a838b01611f3a565b9096509450606089013591508082111561216f57600080fd5b5061217c89828a01611f3a565b979a9699509497509295939492505050565b600080600080600060a086880312156121a657600080fd5b6121af86611dad565b94506121bd60208701611dad565b93506121cb60408701611dad565b92506121d960608701611dad565b949793965091946080013592915050565b6000806000806080858703121561220057600080fd5b61220985611dad565b935061221760208601611dad565b925061222560408601611dad565b9396929550929360600135925050565b634e487b7160e01b600052603260045260246000fd5b600063ffffffff80831681810361227257634e487b7160e01b600052601160045260246000fd5b6001019392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b03878116825260806020808401829052908301879052600091889160a08501845b8a8110156122f257836122df86611dad565b16825293820193908201906001016122cd565b508581036040870152885180825282820194509250600583901b81018201828a0160005b8581101561234457601f19848403018752612332838351611d6e565b96850196925090840190600101612316565b5050868103606088015261235981898b61227c565b9d9c50505050505050505050505050565b6001600160a01b038616815260606020820181905260009061238f908301868861227c565b8281036040840152611f2e81858761227c565b6000602082840312156123b457600080fd5b8151611cf08161206a565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b600080858511156123f957600080fd5b8386111561240657600080fd5b5050820193919092039150565b6001600160e01b0319813581811691600485101561243b5780818660040360031b1b83161692505b505092915050565b6001600160a01b0384168152604060208201819052600090611c70908301848661227c565b60006020828403121561247a57600080fd5b5051919050565b60008251612493818460208701611d4a565b9190910192915050565b600080604083850312156124b057600080fd5b82516124bb8161206a565b602084015190925063ffffffff811681146120a457600080fdfef3177357ab46d8af007ab3fdb9af81da189e1068fefdc0073dca88a2cab40a0098dd2c34f21d19fd1d178ed731f3db3d03e0b4e39f02dbeb040e80c9427a0300360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc98dd2c34f21d19fd1d178ed731f3db3d03e0b4e39f02dbeb040e80c9427a0302cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0098dd2c34f21d19fd1d178ed731f3db3d03e0b4e39f02dbeb040e80c9427a0301a264697066735822122061c4e3b2772d462edfe23ab3b5a19a2aad66030d2401c80227e499b1020d565d64736f6c63430008170033";

type RoyaltyModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoyaltyModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyaltyModule__factory extends ContractFactory {
  constructor(...args: RoyaltyModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    disputeModule: PromiseOrValue<string>,
    licenseRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RoyaltyModule> {
    return super.deploy(
      disputeModule,
      licenseRegistry,
      overrides || {}
    ) as Promise<RoyaltyModule>;
  }
  override getDeployTransaction(
    disputeModule: PromiseOrValue<string>,
    licenseRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      disputeModule,
      licenseRegistry,
      overrides || {}
    );
  }
  override attach(address: string): RoyaltyModule {
    return super.attach(address) as RoyaltyModule;
  }
  override connect(signer: Signer): RoyaltyModule__factory {
    return super.connect(signer) as RoyaltyModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltyModuleInterface {
    return new utils.Interface(_abi) as RoyaltyModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoyaltyModule {
    return new Contract(address, _abi, signerOrProvider) as RoyaltyModule;
  }
}
